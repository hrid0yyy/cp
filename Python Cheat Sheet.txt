Python

# Built-in Functions
len(arr)                # Length of arr
max(arr)                # Maximum value
min(arr)                # Minimum value
sum(arr)                # Sum of elements
sorted(arr)             # Sorted list (ascending)
sorted(arr, reverse=True) # Sorted list (descending)
reversed(arr)           # Reverse iterator
enumerate(arr)          # Index and value pairs
zip(a, b)               # Pair elements from a and b
map(func, arr)          # Apply func to each element
filter(func, arr)       # Filter elements by func
list(arr)               # Convert to list
set(arr)                # Convert to set
dict(zip(keys, vals))   # Create dict from keys and vals
abs(x)                  # Absolute value
pow(a, b)               # a to the power b
round(x)                # Round to nearest integer
all(arr)                # True if all elements are True
any(arr)                # True if any element is True
input()                 # Read input as string
int(s)                  # Convert string to int
str(x)                  # Convert int to string

# List Methods
arr.append(x)           # Add x at end
arr.pop()               # Remove last element
arr.pop(i)              # Remove element at index i
arr.insert(i, x)        # Insert x at index i
arr.remove(x)           # Remove first occurrence of x
arr.count(x)            # Count occurrences of x
arr.index(x)            # Index of first occurrence of x
arr.sort()              # Sort in place (ascending)
arr.sort(reverse=True)  # Sort in place (descending)
arr.reverse()           # Reverse in place
arr.clear()             # Remove all elements
arr.copy()              # Shallow copy

# String Methods
s.lower()               # Lowercase
s.upper()               # Uppercase
s.strip()               # Remove leading/trailing spaces
s.lstrip(), s.rstrip()  # Remove left/right spaces
s.replace('a', 'b')     # Replace 'a' with 'b'
s.find('x')             # Index of first 'x'
s.count('x')            # Count occurrences of 'x'
s.split()               # Split by whitespace
s.split(',')            # Split by comma
s.join(list)            # Join list into string
s.startswith('a')       # Starts with 'a'?
s.endswith('b')         # Ends with 'b'?
s.isdigit()             # Is all digits?
s.isalpha()             # Is all letters?

# Set Methods
st.add(x)               # Add x
st.remove(x)            # Remove x (error if not found)
st.discard(x)           # Remove x (no error)
st.pop()                # Remove and return an element
st.clear()              # Remove all elements
st.union(other)         # Union with other set
st.intersection(other)  # Intersection with other set
st.difference(other)    # Difference with other set

# Dict Methods
d.get(k, default)       # Get value for k, default if not found
d.keys()                # All keys
d.values()              # All values
d.items()               # All key-value pairs
d.pop(k)                # Remove key k
d.popitem()             # Remove and return last key-value pair
d.update(other)         # Update with other dict
d.clear()               # Remove all items

# Collections
from collections import deque, Counter, defaultdict
dq = deque([1,2,3])     # Double-ended queue
dq.append(4)            # Add at end
dq.appendleft(0)        # Add at front
dq.pop()                # Remove last
dq.popleft()            # Remove first

cnt = Counter(arr)      # Count elements
cnt.most_common(1)      # Most common element

dd = defaultdict(int)   # Default value for missing keys

# Heap
import heapq
heapq.heapify(arr)      # Convert list to heap
heapq.heappush(arr, x)  # Push x onto heap
heapq.heappop(arr)      # Pop smallest element
heapq.nlargest(k, arr)  # k largest elements
heapq.nsmallest(k, arr) # k smallest elements

# Math
import math
math.gcd(a, b)          # Greatest common divisor
math.lcm(a, b)          # Least common multiple (Python 3.9+)
math.sqrt(x)            # Square root
math.ceil(x)            # Ceiling
math.floor(x)           # Floor
math.log(x)             # Natural log
math.log2(x)            # Base-2 log
math.log10(x)           # Base-10 log
math.factorial(n)       # Factorial

# Random
import random
random.randint(a, b)    # Random int in [a, b]
random.shuffle(arr)     # Shuffle list in place
random.choice(arr)      # Random element from arr

# Itertools
from itertools import permutations, combinations, product, groupby
list(permutations(arr))         # All permutations
list(combinations(arr, r))      # All r-length combinations
list(product(a, b))             # Cartesian product
groupby(arr)                    # Group consecutive elements

# Time
import time
start = time.time()             # Start timer
end = time.time()               # End timer
print(end - start)              # Print elapsed time

# Bisect (Binary Search)
import bisect
bisect.bisect_left(arr, x)      # Leftmost insertion point for x
bisect.bisect_right(arr, x)     # Rightmost insertion point for x
bisect.insort(arr, x)           # Insert x in sorted order

# Others
assert condition                # Assert condition is True
sys.setrecursionlimit(10**6)    # Increase recursion limit
